/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.information_schema.routines


import org.acme.generated.information_schema.InformationSchema
import org.acme.generated.pg_catalog.tables.PgAttribute
import org.acme.generated.pg_catalog.tables.PgType
import org.acme.generated.pg_catalog.tables.records.PgAttributeRecord
import org.acme.generated.pg_catalog.tables.records.PgTypeRecord
import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class _PgTruetypid : AbstractRoutine<Long>("_pg_truetypid", InformationSchema.INFORMATION_SCHEMA, SQLDataType.BIGINT) {
    companion object {

        /**
         * The parameter
         * <code>information_schema._pg_truetypid.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Long?> = Internal.createParameter("RETURN_VALUE", SQLDataType.BIGINT, false, false)

        /**
         * The parameter <code>information_schema._pg_truetypid._1</code>.
         */
        val _1: Parameter<PgAttributeRecord?> = Internal.createParameter("_1", PgAttribute.PG_ATTRIBUTE.dataType, false, true)

        /**
         * The parameter <code>information_schema._pg_truetypid._2</code>.
         */
        val _2: Parameter<PgTypeRecord?> = Internal.createParameter("_2", PgType.PG_TYPE.dataType, false, true)
    }

    init {
        returnParameter = _PgTruetypid.RETURN_VALUE
        addInParameter(_PgTruetypid._1)
        addInParameter(_PgTruetypid._2)
    }

    /**
     * Set the <code>_1</code> parameter IN value to the routine
     */
    fun set__1(value: PgAttributeRecord?): Unit = setValue(_PgTruetypid._1, value)

    /**
     * Set the <code>_1</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__1(field: Field<PgAttributeRecord?>): Unit {
        setField(_PgTruetypid._1, field)
    }

    /**
     * Set the <code>_2</code> parameter IN value to the routine
     */
    fun set__2(value: PgTypeRecord?): Unit = setValue(_PgTruetypid._2, value)

    /**
     * Set the <code>_2</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__2(field: Field<PgTypeRecord?>): Unit {
        setField(_PgTruetypid._2, field)
    }
}
