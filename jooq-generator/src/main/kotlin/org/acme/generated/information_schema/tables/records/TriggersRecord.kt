/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.information_schema.tables.records


import java.time.OffsetDateTime

import org.acme.generated.information_schema.tables.Triggers
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TriggersRecord() : TableRecordImpl<TriggersRecord>(Triggers.TRIGGERS) {

    open var triggerCatalog: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var triggerSchema: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var triggerName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var eventManipulation: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var eventObjectCatalog: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var eventObjectSchema: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var eventObjectTable: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var actionOrder: Int?
        set(value): Unit = set(7, value)
        get(): Int? = get(7) as Int?

    open var actionCondition: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var actionStatement: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var actionOrientation: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var actionTiming: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    open var actionReferenceOldTable: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    open var actionReferenceNewTable: String?
        set(value): Unit = set(13, value)
        get(): String? = get(13) as String?

    open var actionReferenceOldRow: String?
        set(value): Unit = set(14, value)
        get(): String? = get(14) as String?

    open var actionReferenceNewRow: String?
        set(value): Unit = set(15, value)
        get(): String? = get(15) as String?

    open var created: OffsetDateTime?
        set(value): Unit = set(16, value)
        get(): OffsetDateTime? = get(16) as OffsetDateTime?

    /**
     * Create a detached, initialised TriggersRecord
     */
    constructor(triggerCatalog: String? = null, triggerSchema: String? = null, triggerName: String? = null, eventManipulation: String? = null, eventObjectCatalog: String? = null, eventObjectSchema: String? = null, eventObjectTable: String? = null, actionOrder: Int? = null, actionCondition: String? = null, actionStatement: String? = null, actionOrientation: String? = null, actionTiming: String? = null, actionReferenceOldTable: String? = null, actionReferenceNewTable: String? = null, actionReferenceOldRow: String? = null, actionReferenceNewRow: String? = null, created: OffsetDateTime? = null): this() {
        this.triggerCatalog = triggerCatalog
        this.triggerSchema = triggerSchema
        this.triggerName = triggerName
        this.eventManipulation = eventManipulation
        this.eventObjectCatalog = eventObjectCatalog
        this.eventObjectSchema = eventObjectSchema
        this.eventObjectTable = eventObjectTable
        this.actionOrder = actionOrder
        this.actionCondition = actionCondition
        this.actionStatement = actionStatement
        this.actionOrientation = actionOrientation
        this.actionTiming = actionTiming
        this.actionReferenceOldTable = actionReferenceOldTable
        this.actionReferenceNewTable = actionReferenceNewTable
        this.actionReferenceOldRow = actionReferenceOldRow
        this.actionReferenceNewRow = actionReferenceNewRow
        this.created = created
        resetChangedOnNotNull()
    }
}
