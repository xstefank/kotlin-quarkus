/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.information_schema.tables.records


import org.acme.generated.information_schema.tables.SqlFeatures
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SqlFeaturesRecord() : TableRecordImpl<SqlFeaturesRecord>(SqlFeatures.SQL_FEATURES) {

    open var featureId: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var featureName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var subFeatureId: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var subFeatureName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsSupported")
    open var isSupported: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsVerifiedBy")
    open var isVerifiedBy: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var comments: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    /**
     * Create a detached, initialised SqlFeaturesRecord
     */
    constructor(featureId: String? = null, featureName: String? = null, subFeatureId: String? = null, subFeatureName: String? = null, isSupported: String? = null, isVerifiedBy: String? = null, comments: String? = null): this() {
        this.featureId = featureId
        this.featureName = featureName
        this.subFeatureId = subFeatureId
        this.subFeatureName = subFeatureName
        this.isSupported = isSupported
        this.isVerifiedBy = isVerifiedBy
        this.comments = comments
        resetChangedOnNotNull()
    }
}
