/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.information_schema.tables.records


import java.time.OffsetDateTime

import org.acme.generated.information_schema.tables.Routines
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class RoutinesRecord() : TableRecordImpl<RoutinesRecord>(Routines.ROUTINES) {

    open var specificCatalog: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var specificSchema: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var specificName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var routineCatalog: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var routineSchema: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var routineName: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var routineType: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var moduleCatalog: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var moduleSchema: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var moduleName: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var udtCatalog: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var udtSchema: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    open var udtName: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    open var dataType: String?
        set(value): Unit = set(13, value)
        get(): String? = get(13) as String?

    open var characterMaximumLength: Int?
        set(value): Unit = set(14, value)
        get(): Int? = get(14) as Int?

    open var characterOctetLength: Int?
        set(value): Unit = set(15, value)
        get(): Int? = get(15) as Int?

    open var characterSetCatalog: String?
        set(value): Unit = set(16, value)
        get(): String? = get(16) as String?

    open var characterSetSchema: String?
        set(value): Unit = set(17, value)
        get(): String? = get(17) as String?

    open var characterSetName: String?
        set(value): Unit = set(18, value)
        get(): String? = get(18) as String?

    open var collationCatalog: String?
        set(value): Unit = set(19, value)
        get(): String? = get(19) as String?

    open var collationSchema: String?
        set(value): Unit = set(20, value)
        get(): String? = get(20) as String?

    open var collationName: String?
        set(value): Unit = set(21, value)
        get(): String? = get(21) as String?

    open var numericPrecision: Int?
        set(value): Unit = set(22, value)
        get(): Int? = get(22) as Int?

    open var numericPrecisionRadix: Int?
        set(value): Unit = set(23, value)
        get(): Int? = get(23) as Int?

    open var numericScale: Int?
        set(value): Unit = set(24, value)
        get(): Int? = get(24) as Int?

    open var datetimePrecision: Int?
        set(value): Unit = set(25, value)
        get(): Int? = get(25) as Int?

    open var intervalType: String?
        set(value): Unit = set(26, value)
        get(): String? = get(26) as String?

    open var intervalPrecision: Int?
        set(value): Unit = set(27, value)
        get(): Int? = get(27) as Int?

    open var typeUdtCatalog: String?
        set(value): Unit = set(28, value)
        get(): String? = get(28) as String?

    open var typeUdtSchema: String?
        set(value): Unit = set(29, value)
        get(): String? = get(29) as String?

    open var typeUdtName: String?
        set(value): Unit = set(30, value)
        get(): String? = get(30) as String?

    open var scopeCatalog: String?
        set(value): Unit = set(31, value)
        get(): String? = get(31) as String?

    open var scopeSchema: String?
        set(value): Unit = set(32, value)
        get(): String? = get(32) as String?

    open var scopeName: String?
        set(value): Unit = set(33, value)
        get(): String? = get(33) as String?

    open var maximumCardinality: Int?
        set(value): Unit = set(34, value)
        get(): Int? = get(34) as Int?

    open var dtdIdentifier: String?
        set(value): Unit = set(35, value)
        get(): String? = get(35) as String?

    open var routineBody: String?
        set(value): Unit = set(36, value)
        get(): String? = get(36) as String?

    open var routineDefinition: String?
        set(value): Unit = set(37, value)
        get(): String? = get(37) as String?

    open var externalName: String?
        set(value): Unit = set(38, value)
        get(): String? = get(38) as String?

    open var externalLanguage: String?
        set(value): Unit = set(39, value)
        get(): String? = get(39) as String?

    open var parameterStyle: String?
        set(value): Unit = set(40, value)
        get(): String? = get(40) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsDeterministic")
    open var isDeterministic: String?
        set(value): Unit = set(41, value)
        get(): String? = get(41) as String?

    open var sqlDataAccess: String?
        set(value): Unit = set(42, value)
        get(): String? = get(42) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsNullCall")
    open var isNullCall: String?
        set(value): Unit = set(43, value)
        get(): String? = get(43) as String?

    open var sqlPath: String?
        set(value): Unit = set(44, value)
        get(): String? = get(44) as String?

    open var schemaLevelRoutine: String?
        set(value): Unit = set(45, value)
        get(): String? = get(45) as String?

    open var maxDynamicResultSets: Int?
        set(value): Unit = set(46, value)
        get(): Int? = get(46) as Int?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsUserDefinedCast")
    open var isUserDefinedCast: String?
        set(value): Unit = set(47, value)
        get(): String? = get(47) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsImplicitlyInvocable")
    open var isImplicitlyInvocable: String?
        set(value): Unit = set(48, value)
        get(): String? = get(48) as String?

    open var securityType: String?
        set(value): Unit = set(49, value)
        get(): String? = get(49) as String?

    open var toSqlSpecificCatalog: String?
        set(value): Unit = set(50, value)
        get(): String? = get(50) as String?

    open var toSqlSpecificSchema: String?
        set(value): Unit = set(51, value)
        get(): String? = get(51) as String?

    open var toSqlSpecificName: String?
        set(value): Unit = set(52, value)
        get(): String? = get(52) as String?

    open var asLocator: String?
        set(value): Unit = set(53, value)
        get(): String? = get(53) as String?

    open var created: OffsetDateTime?
        set(value): Unit = set(54, value)
        get(): OffsetDateTime? = get(54) as OffsetDateTime?

    open var lastAltered: OffsetDateTime?
        set(value): Unit = set(55, value)
        get(): OffsetDateTime? = get(55) as OffsetDateTime?

    open var newSavepointLevel: String?
        set(value): Unit = set(56, value)
        get(): String? = get(56) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsUdtDependent")
    open var isUdtDependent: String?
        set(value): Unit = set(57, value)
        get(): String? = get(57) as String?

    open var resultCastFromDataType: String?
        set(value): Unit = set(58, value)
        get(): String? = get(58) as String?

    open var resultCastAsLocator: String?
        set(value): Unit = set(59, value)
        get(): String? = get(59) as String?

    open var resultCastCharMaxLength: Int?
        set(value): Unit = set(60, value)
        get(): Int? = get(60) as Int?

    open var resultCastCharOctetLength: Int?
        set(value): Unit = set(61, value)
        get(): Int? = get(61) as Int?

    open var resultCastCharSetCatalog: String?
        set(value): Unit = set(62, value)
        get(): String? = get(62) as String?

    open var resultCastCharSetSchema: String?
        set(value): Unit = set(63, value)
        get(): String? = get(63) as String?

    open var resultCastCharSetName: String?
        set(value): Unit = set(64, value)
        get(): String? = get(64) as String?

    open var resultCastCollationCatalog: String?
        set(value): Unit = set(65, value)
        get(): String? = get(65) as String?

    open var resultCastCollationSchema: String?
        set(value): Unit = set(66, value)
        get(): String? = get(66) as String?

    open var resultCastCollationName: String?
        set(value): Unit = set(67, value)
        get(): String? = get(67) as String?

    open var resultCastNumericPrecision: Int?
        set(value): Unit = set(68, value)
        get(): Int? = get(68) as Int?

    open var resultCastNumericPrecisionRadix: Int?
        set(value): Unit = set(69, value)
        get(): Int? = get(69) as Int?

    open var resultCastNumericScale: Int?
        set(value): Unit = set(70, value)
        get(): Int? = get(70) as Int?

    open var resultCastDatetimePrecision: Int?
        set(value): Unit = set(71, value)
        get(): Int? = get(71) as Int?

    open var resultCastIntervalType: String?
        set(value): Unit = set(72, value)
        get(): String? = get(72) as String?

    open var resultCastIntervalPrecision: Int?
        set(value): Unit = set(73, value)
        get(): Int? = get(73) as Int?

    open var resultCastTypeUdtCatalog: String?
        set(value): Unit = set(74, value)
        get(): String? = get(74) as String?

    open var resultCastTypeUdtSchema: String?
        set(value): Unit = set(75, value)
        get(): String? = get(75) as String?

    open var resultCastTypeUdtName: String?
        set(value): Unit = set(76, value)
        get(): String? = get(76) as String?

    open var resultCastScopeCatalog: String?
        set(value): Unit = set(77, value)
        get(): String? = get(77) as String?

    open var resultCastScopeSchema: String?
        set(value): Unit = set(78, value)
        get(): String? = get(78) as String?

    open var resultCastScopeName: String?
        set(value): Unit = set(79, value)
        get(): String? = get(79) as String?

    open var resultCastMaximumCardinality: Int?
        set(value): Unit = set(80, value)
        get(): Int? = get(80) as Int?

    open var resultCastDtdIdentifier: String?
        set(value): Unit = set(81, value)
        get(): String? = get(81) as String?

    /**
     * Create a detached, initialised RoutinesRecord
     */
    constructor(specificCatalog: String? = null, specificSchema: String? = null, specificName: String? = null, routineCatalog: String? = null, routineSchema: String? = null, routineName: String? = null, routineType: String? = null, moduleCatalog: String? = null, moduleSchema: String? = null, moduleName: String? = null, udtCatalog: String? = null, udtSchema: String? = null, udtName: String? = null, dataType: String? = null, characterMaximumLength: Int? = null, characterOctetLength: Int? = null, characterSetCatalog: String? = null, characterSetSchema: String? = null, characterSetName: String? = null, collationCatalog: String? = null, collationSchema: String? = null, collationName: String? = null, numericPrecision: Int? = null, numericPrecisionRadix: Int? = null, numericScale: Int? = null, datetimePrecision: Int? = null, intervalType: String? = null, intervalPrecision: Int? = null, typeUdtCatalog: String? = null, typeUdtSchema: String? = null, typeUdtName: String? = null, scopeCatalog: String? = null, scopeSchema: String? = null, scopeName: String? = null, maximumCardinality: Int? = null, dtdIdentifier: String? = null, routineBody: String? = null, routineDefinition: String? = null, externalName: String? = null, externalLanguage: String? = null, parameterStyle: String? = null, isDeterministic: String? = null, sqlDataAccess: String? = null, isNullCall: String? = null, sqlPath: String? = null, schemaLevelRoutine: String? = null, maxDynamicResultSets: Int? = null, isUserDefinedCast: String? = null, isImplicitlyInvocable: String? = null, securityType: String? = null, toSqlSpecificCatalog: String? = null, toSqlSpecificSchema: String? = null, toSqlSpecificName: String? = null, asLocator: String? = null, created: OffsetDateTime? = null, lastAltered: OffsetDateTime? = null, newSavepointLevel: String? = null, isUdtDependent: String? = null, resultCastFromDataType: String? = null, resultCastAsLocator: String? = null, resultCastCharMaxLength: Int? = null, resultCastCharOctetLength: Int? = null, resultCastCharSetCatalog: String? = null, resultCastCharSetSchema: String? = null, resultCastCharSetName: String? = null, resultCastCollationCatalog: String? = null, resultCastCollationSchema: String? = null, resultCastCollationName: String? = null, resultCastNumericPrecision: Int? = null, resultCastNumericPrecisionRadix: Int? = null, resultCastNumericScale: Int? = null, resultCastDatetimePrecision: Int? = null, resultCastIntervalType: String? = null, resultCastIntervalPrecision: Int? = null, resultCastTypeUdtCatalog: String? = null, resultCastTypeUdtSchema: String? = null, resultCastTypeUdtName: String? = null, resultCastScopeCatalog: String? = null, resultCastScopeSchema: String? = null, resultCastScopeName: String? = null, resultCastMaximumCardinality: Int? = null, resultCastDtdIdentifier: String? = null): this() {
        this.specificCatalog = specificCatalog
        this.specificSchema = specificSchema
        this.specificName = specificName
        this.routineCatalog = routineCatalog
        this.routineSchema = routineSchema
        this.routineName = routineName
        this.routineType = routineType
        this.moduleCatalog = moduleCatalog
        this.moduleSchema = moduleSchema
        this.moduleName = moduleName
        this.udtCatalog = udtCatalog
        this.udtSchema = udtSchema
        this.udtName = udtName
        this.dataType = dataType
        this.characterMaximumLength = characterMaximumLength
        this.characterOctetLength = characterOctetLength
        this.characterSetCatalog = characterSetCatalog
        this.characterSetSchema = characterSetSchema
        this.characterSetName = characterSetName
        this.collationCatalog = collationCatalog
        this.collationSchema = collationSchema
        this.collationName = collationName
        this.numericPrecision = numericPrecision
        this.numericPrecisionRadix = numericPrecisionRadix
        this.numericScale = numericScale
        this.datetimePrecision = datetimePrecision
        this.intervalType = intervalType
        this.intervalPrecision = intervalPrecision
        this.typeUdtCatalog = typeUdtCatalog
        this.typeUdtSchema = typeUdtSchema
        this.typeUdtName = typeUdtName
        this.scopeCatalog = scopeCatalog
        this.scopeSchema = scopeSchema
        this.scopeName = scopeName
        this.maximumCardinality = maximumCardinality
        this.dtdIdentifier = dtdIdentifier
        this.routineBody = routineBody
        this.routineDefinition = routineDefinition
        this.externalName = externalName
        this.externalLanguage = externalLanguage
        this.parameterStyle = parameterStyle
        this.isDeterministic = isDeterministic
        this.sqlDataAccess = sqlDataAccess
        this.isNullCall = isNullCall
        this.sqlPath = sqlPath
        this.schemaLevelRoutine = schemaLevelRoutine
        this.maxDynamicResultSets = maxDynamicResultSets
        this.isUserDefinedCast = isUserDefinedCast
        this.isImplicitlyInvocable = isImplicitlyInvocable
        this.securityType = securityType
        this.toSqlSpecificCatalog = toSqlSpecificCatalog
        this.toSqlSpecificSchema = toSqlSpecificSchema
        this.toSqlSpecificName = toSqlSpecificName
        this.asLocator = asLocator
        this.created = created
        this.lastAltered = lastAltered
        this.newSavepointLevel = newSavepointLevel
        this.isUdtDependent = isUdtDependent
        this.resultCastFromDataType = resultCastFromDataType
        this.resultCastAsLocator = resultCastAsLocator
        this.resultCastCharMaxLength = resultCastCharMaxLength
        this.resultCastCharOctetLength = resultCastCharOctetLength
        this.resultCastCharSetCatalog = resultCastCharSetCatalog
        this.resultCastCharSetSchema = resultCastCharSetSchema
        this.resultCastCharSetName = resultCastCharSetName
        this.resultCastCollationCatalog = resultCastCollationCatalog
        this.resultCastCollationSchema = resultCastCollationSchema
        this.resultCastCollationName = resultCastCollationName
        this.resultCastNumericPrecision = resultCastNumericPrecision
        this.resultCastNumericPrecisionRadix = resultCastNumericPrecisionRadix
        this.resultCastNumericScale = resultCastNumericScale
        this.resultCastDatetimePrecision = resultCastDatetimePrecision
        this.resultCastIntervalType = resultCastIntervalType
        this.resultCastIntervalPrecision = resultCastIntervalPrecision
        this.resultCastTypeUdtCatalog = resultCastTypeUdtCatalog
        this.resultCastTypeUdtSchema = resultCastTypeUdtSchema
        this.resultCastTypeUdtName = resultCastTypeUdtName
        this.resultCastScopeCatalog = resultCastScopeCatalog
        this.resultCastScopeSchema = resultCastScopeSchema
        this.resultCastScopeName = resultCastScopeName
        this.resultCastMaximumCardinality = resultCastMaximumCardinality
        this.resultCastDtdIdentifier = resultCastDtdIdentifier
        resetChangedOnNotNull()
    }
}
