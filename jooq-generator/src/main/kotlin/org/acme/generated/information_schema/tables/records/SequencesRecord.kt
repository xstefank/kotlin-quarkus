/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.information_schema.tables.records


import org.acme.generated.information_schema.tables.Sequences
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SequencesRecord() : TableRecordImpl<SequencesRecord>(Sequences.SEQUENCES) {

    open var sequenceCatalog: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var sequenceSchema: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var sequenceName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var dataType: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var numericPrecision: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var numericPrecisionRadix: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var numericScale: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var startValue: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var minimumValue: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var maximumValue: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var increment: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var cycleOption: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    /**
     * Create a detached, initialised SequencesRecord
     */
    constructor(sequenceCatalog: String? = null, sequenceSchema: String? = null, sequenceName: String? = null, dataType: String? = null, numericPrecision: Int? = null, numericPrecisionRadix: Int? = null, numericScale: Int? = null, startValue: String? = null, minimumValue: String? = null, maximumValue: String? = null, increment: String? = null, cycleOption: String? = null): this() {
        this.sequenceCatalog = sequenceCatalog
        this.sequenceSchema = sequenceSchema
        this.sequenceName = sequenceName
        this.dataType = dataType
        this.numericPrecision = numericPrecision
        this.numericPrecisionRadix = numericPrecisionRadix
        this.numericScale = numericScale
        this.startValue = startValue
        this.minimumValue = minimumValue
        this.maximumValue = maximumValue
        this.increment = increment
        this.cycleOption = cycleOption
        resetChangedOnNotNull()
    }
}
