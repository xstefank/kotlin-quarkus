/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.information_schema.tables.records


import org.acme.generated.information_schema.tables.Tables
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TablesRecord() : TableRecordImpl<TablesRecord>(Tables.TABLES) {

    open var tableCatalog: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var tableSchema: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var tableName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var tableType: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var selfReferencingColumnName: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var referenceGeneration: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var userDefinedTypeCatalog: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var userDefinedTypeSchema: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var userDefinedTypeName: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsInsertableInto")
    open var isInsertableInto: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsTyped")
    open var isTyped: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var commitAction: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    /**
     * Create a detached, initialised TablesRecord
     */
    constructor(tableCatalog: String? = null, tableSchema: String? = null, tableName: String? = null, tableType: String? = null, selfReferencingColumnName: String? = null, referenceGeneration: String? = null, userDefinedTypeCatalog: String? = null, userDefinedTypeSchema: String? = null, userDefinedTypeName: String? = null, isInsertableInto: String? = null, isTyped: String? = null, commitAction: String? = null): this() {
        this.tableCatalog = tableCatalog
        this.tableSchema = tableSchema
        this.tableName = tableName
        this.tableType = tableType
        this.selfReferencingColumnName = selfReferencingColumnName
        this.referenceGeneration = referenceGeneration
        this.userDefinedTypeCatalog = userDefinedTypeCatalog
        this.userDefinedTypeSchema = userDefinedTypeSchema
        this.userDefinedTypeName = userDefinedTypeName
        this.isInsertableInto = isInsertableInto
        this.isTyped = isTyped
        this.commitAction = commitAction
        resetChangedOnNotNull()
    }
}
