/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.information_schema.routines


import org.acme.generated.information_schema.InformationSchema
import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class _PgDatetimePrecision : AbstractRoutine<Int>("_pg_datetime_precision", InformationSchema.INFORMATION_SCHEMA, SQLDataType.INTEGER) {
    companion object {

        /**
         * The parameter
         * <code>information_schema._pg_datetime_precision.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Int?> = Internal.createParameter("RETURN_VALUE", SQLDataType.INTEGER, false, false)

        /**
         * The parameter
         * <code>information_schema._pg_datetime_precision.typid</code>.
         */
        val TYPID: Parameter<Long?> = Internal.createParameter("typid", SQLDataType.BIGINT, false, false)

        /**
         * The parameter
         * <code>information_schema._pg_datetime_precision.typmod</code>.
         */
        val TYPMOD: Parameter<Int?> = Internal.createParameter("typmod", SQLDataType.INTEGER, false, false)
    }

    init {
        returnParameter = _PgDatetimePrecision.RETURN_VALUE
        addInParameter(_PgDatetimePrecision.TYPID)
        addInParameter(_PgDatetimePrecision.TYPMOD)
    }

    /**
     * Set the <code>typid</code> parameter IN value to the routine
     */
    fun setTypid(value: Long?): Unit = setValue(_PgDatetimePrecision.TYPID, value)

    /**
     * Set the <code>typid</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setTypid(field: Field<Long?>): Unit {
        setField(_PgDatetimePrecision.TYPID, field)
    }

    /**
     * Set the <code>typmod</code> parameter IN value to the routine
     */
    fun setTypmod(value: Int?): Unit = setValue(_PgDatetimePrecision.TYPMOD, value)

    /**
     * Set the <code>typmod</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setTypmod(field: Field<Int?>): Unit {
        setField(_PgDatetimePrecision.TYPMOD, field)
    }
}
