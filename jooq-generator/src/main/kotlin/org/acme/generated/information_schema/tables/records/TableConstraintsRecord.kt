/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.information_schema.tables.records


import org.acme.generated.information_schema.tables.TableConstraints
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TableConstraintsRecord() : TableRecordImpl<TableConstraintsRecord>(TableConstraints.TABLE_CONSTRAINTS) {

    open var constraintCatalog: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var constraintSchema: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var constraintName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var tableCatalog: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var tableSchema: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var tableName: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var constraintType: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsDeferrable")
    open var isDeferrable: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var initiallyDeferred: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var enforced: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    /**
     * Create a detached, initialised TableConstraintsRecord
     */
    constructor(constraintCatalog: String? = null, constraintSchema: String? = null, constraintName: String? = null, tableCatalog: String? = null, tableSchema: String? = null, tableName: String? = null, constraintType: String? = null, isDeferrable: String? = null, initiallyDeferred: String? = null, enforced: String? = null): this() {
        this.constraintCatalog = constraintCatalog
        this.constraintSchema = constraintSchema
        this.constraintName = constraintName
        this.tableCatalog = tableCatalog
        this.tableSchema = tableSchema
        this.tableName = tableName
        this.constraintType = constraintType
        this.isDeferrable = isDeferrable
        this.initiallyDeferred = initiallyDeferred
        this.enforced = enforced
        resetChangedOnNotNull()
    }
}
