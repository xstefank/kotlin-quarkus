/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.information_schema.tables.records


import org.acme.generated.information_schema.tables.ElementTypes
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ElementTypesRecord() : TableRecordImpl<ElementTypesRecord>(ElementTypes.ELEMENT_TYPES) {

    open var objectCatalog: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var objectSchema: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var objectName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var objectType: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var collectionTypeIdentifier: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var dataType: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var characterMaximumLength: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var characterOctetLength: Int?
        set(value): Unit = set(7, value)
        get(): Int? = get(7) as Int?

    open var characterSetCatalog: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var characterSetSchema: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var characterSetName: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var collationCatalog: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    open var collationSchema: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    open var collationName: String?
        set(value): Unit = set(13, value)
        get(): String? = get(13) as String?

    open var numericPrecision: Int?
        set(value): Unit = set(14, value)
        get(): Int? = get(14) as Int?

    open var numericPrecisionRadix: Int?
        set(value): Unit = set(15, value)
        get(): Int? = get(15) as Int?

    open var numericScale: Int?
        set(value): Unit = set(16, value)
        get(): Int? = get(16) as Int?

    open var datetimePrecision: Int?
        set(value): Unit = set(17, value)
        get(): Int? = get(17) as Int?

    open var intervalType: String?
        set(value): Unit = set(18, value)
        get(): String? = get(18) as String?

    open var intervalPrecision: Int?
        set(value): Unit = set(19, value)
        get(): Int? = get(19) as Int?

    open var domainDefault: String?
        set(value): Unit = set(20, value)
        get(): String? = get(20) as String?

    open var udtCatalog: String?
        set(value): Unit = set(21, value)
        get(): String? = get(21) as String?

    open var udtSchema: String?
        set(value): Unit = set(22, value)
        get(): String? = get(22) as String?

    open var udtName: String?
        set(value): Unit = set(23, value)
        get(): String? = get(23) as String?

    open var scopeCatalog: String?
        set(value): Unit = set(24, value)
        get(): String? = get(24) as String?

    open var scopeSchema: String?
        set(value): Unit = set(25, value)
        get(): String? = get(25) as String?

    open var scopeName: String?
        set(value): Unit = set(26, value)
        get(): String? = get(26) as String?

    open var maximumCardinality: Int?
        set(value): Unit = set(27, value)
        get(): Int? = get(27) as Int?

    open var dtdIdentifier: String?
        set(value): Unit = set(28, value)
        get(): String? = get(28) as String?

    /**
     * Create a detached, initialised ElementTypesRecord
     */
    constructor(objectCatalog: String? = null, objectSchema: String? = null, objectName: String? = null, objectType: String? = null, collectionTypeIdentifier: String? = null, dataType: String? = null, characterMaximumLength: Int? = null, characterOctetLength: Int? = null, characterSetCatalog: String? = null, characterSetSchema: String? = null, characterSetName: String? = null, collationCatalog: String? = null, collationSchema: String? = null, collationName: String? = null, numericPrecision: Int? = null, numericPrecisionRadix: Int? = null, numericScale: Int? = null, datetimePrecision: Int? = null, intervalType: String? = null, intervalPrecision: Int? = null, domainDefault: String? = null, udtCatalog: String? = null, udtSchema: String? = null, udtName: String? = null, scopeCatalog: String? = null, scopeSchema: String? = null, scopeName: String? = null, maximumCardinality: Int? = null, dtdIdentifier: String? = null): this() {
        this.objectCatalog = objectCatalog
        this.objectSchema = objectSchema
        this.objectName = objectName
        this.objectType = objectType
        this.collectionTypeIdentifier = collectionTypeIdentifier
        this.dataType = dataType
        this.characterMaximumLength = characterMaximumLength
        this.characterOctetLength = characterOctetLength
        this.characterSetCatalog = characterSetCatalog
        this.characterSetSchema = characterSetSchema
        this.characterSetName = characterSetName
        this.collationCatalog = collationCatalog
        this.collationSchema = collationSchema
        this.collationName = collationName
        this.numericPrecision = numericPrecision
        this.numericPrecisionRadix = numericPrecisionRadix
        this.numericScale = numericScale
        this.datetimePrecision = datetimePrecision
        this.intervalType = intervalType
        this.intervalPrecision = intervalPrecision
        this.domainDefault = domainDefault
        this.udtCatalog = udtCatalog
        this.udtSchema = udtSchema
        this.udtName = udtName
        this.scopeCatalog = scopeCatalog
        this.scopeSchema = scopeSchema
        this.scopeName = scopeName
        this.maximumCardinality = maximumCardinality
        this.dtdIdentifier = dtdIdentifier
        resetChangedOnNotNull()
    }
}
