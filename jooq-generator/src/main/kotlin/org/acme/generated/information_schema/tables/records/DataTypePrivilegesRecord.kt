/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.information_schema.tables.records


import org.acme.generated.information_schema.tables.DataTypePrivileges
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DataTypePrivilegesRecord() : TableRecordImpl<DataTypePrivilegesRecord>(DataTypePrivileges.DATA_TYPE_PRIVILEGES) {

    open var objectCatalog: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var objectSchema: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var objectName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var objectType: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var dtdIdentifier: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    /**
     * Create a detached, initialised DataTypePrivilegesRecord
     */
    constructor(objectCatalog: String? = null, objectSchema: String? = null, objectName: String? = null, objectType: String? = null, dtdIdentifier: String? = null): this() {
        this.objectCatalog = objectCatalog
        this.objectSchema = objectSchema
        this.objectName = objectName
        this.objectType = objectType
        this.dtdIdentifier = dtdIdentifier
        resetChangedOnNotNull()
    }
}
