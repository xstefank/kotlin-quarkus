/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgRange
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgRangeRecord() : UpdatableRecordImpl<PgRangeRecord>(PgRange.PG_RANGE) {

    open var rngtypid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var rngsubtype: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var rngmultitypid: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var rngcollation: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var rngsubopc: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var rngcanonical: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var rngsubdiff: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised PgRangeRecord
     */
    constructor(rngtypid: Long? = null, rngsubtype: Long? = null, rngmultitypid: Long? = null, rngcollation: Long? = null, rngsubopc: Long? = null, rngcanonical: String? = null, rngsubdiff: String? = null): this() {
        this.rngtypid = rngtypid
        this.rngsubtype = rngsubtype
        this.rngmultitypid = rngmultitypid
        this.rngcollation = rngcollation
        this.rngsubopc = rngsubopc
        this.rngcanonical = rngcanonical
        this.rngsubdiff = rngsubdiff
        resetChangedOnNotNull()
    }
}
