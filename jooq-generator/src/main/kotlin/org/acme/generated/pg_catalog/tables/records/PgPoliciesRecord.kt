/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgPolicies
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgPoliciesRecord() : TableRecordImpl<PgPoliciesRecord>(PgPolicies.PG_POLICIES) {

    open var schemaname: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var tablename: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var policyname: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var permissive: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var roles: Array<String?>?
        set(value): Unit = set(4, value)
        get(): Array<String?>? = get(4) as Array<String?>?

    open var cmd: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var qual: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var withCheck: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    /**
     * Create a detached, initialised PgPoliciesRecord
     */
    constructor(schemaname: String? = null, tablename: String? = null, policyname: String? = null, permissive: String? = null, roles: Array<String?>? = null, cmd: String? = null, qual: String? = null, withCheck: String? = null): this() {
        this.schemaname = schemaname
        this.tablename = tablename
        this.policyname = policyname
        this.permissive = permissive
        this.roles = roles
        this.cmd = cmd
        this.qual = qual
        this.withCheck = withCheck
        resetChangedOnNotNull()
    }
}
