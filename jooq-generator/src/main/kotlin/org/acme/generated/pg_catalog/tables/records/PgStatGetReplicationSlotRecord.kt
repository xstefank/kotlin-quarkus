/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import java.time.OffsetDateTime

import org.acme.generated.pg_catalog.tables.PgStatGetReplicationSlot
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgStatGetReplicationSlotRecord() : TableRecordImpl<PgStatGetReplicationSlotRecord>(PgStatGetReplicationSlot.PG_STAT_GET_REPLICATION_SLOT) {

    open var slotName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var spillTxns: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var spillCount: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var spillBytes: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var streamTxns: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var streamCount: Long?
        set(value): Unit = set(5, value)
        get(): Long? = get(5) as Long?

    open var streamBytes: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    open var totalTxns: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var totalBytes: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    open var statsReset: OffsetDateTime?
        set(value): Unit = set(9, value)
        get(): OffsetDateTime? = get(9) as OffsetDateTime?

    /**
     * Create a detached, initialised PgStatGetReplicationSlotRecord
     */
    constructor(slotName: String? = null, spillTxns: Long? = null, spillCount: Long? = null, spillBytes: Long? = null, streamTxns: Long? = null, streamCount: Long? = null, streamBytes: Long? = null, totalTxns: Long? = null, totalBytes: Long? = null, statsReset: OffsetDateTime? = null): this() {
        this.slotName = slotName
        this.spillTxns = spillTxns
        this.spillCount = spillCount
        this.spillBytes = spillBytes
        this.streamTxns = streamTxns
        this.streamCount = streamCount
        this.streamBytes = streamBytes
        this.totalTxns = totalTxns
        this.totalBytes = totalBytes
        this.statsReset = statsReset
        resetChangedOnNotNull()
    }
}
