/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgDatabase
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgDatabaseRecord() : UpdatableRecordImpl<PgDatabaseRecord>(PgDatabase.PG_DATABASE) {

    open var oid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var datname: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var datdba: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var encoding: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var datcollate: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var datctype: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var datistemplate: Boolean?
        set(value): Unit = set(6, value)
        get(): Boolean? = get(6) as Boolean?

    open var datallowconn: Boolean?
        set(value): Unit = set(7, value)
        get(): Boolean? = get(7) as Boolean?

    open var datconnlimit: Int?
        set(value): Unit = set(8, value)
        get(): Int? = get(8) as Int?

    open var datlastsysoid: Long?
        set(value): Unit = set(9, value)
        get(): Long? = get(9) as Long?

    open var datfrozenxid: Long?
        set(value): Unit = set(10, value)
        get(): Long? = get(10) as Long?

    open var datminmxid: Long?
        set(value): Unit = set(11, value)
        get(): Long? = get(11) as Long?

    open var dattablespace: Long?
        set(value): Unit = set(12, value)
        get(): Long? = get(12) as Long?

    open var datacl: Array<String?>?
        set(value): Unit = set(13, value)
        get(): Array<String?>? = get(13) as Array<String?>?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised PgDatabaseRecord
     */
    constructor(oid: Long? = null, datname: String? = null, datdba: Long? = null, encoding: Int? = null, datcollate: String? = null, datctype: String? = null, datistemplate: Boolean? = null, datallowconn: Boolean? = null, datconnlimit: Int? = null, datlastsysoid: Long? = null, datfrozenxid: Long? = null, datminmxid: Long? = null, dattablespace: Long? = null, datacl: Array<String?>? = null): this() {
        this.oid = oid
        this.datname = datname
        this.datdba = datdba
        this.encoding = encoding
        this.datcollate = datcollate
        this.datctype = datctype
        this.datistemplate = datistemplate
        this.datallowconn = datallowconn
        this.datconnlimit = datconnlimit
        this.datlastsysoid = datlastsysoid
        this.datfrozenxid = datfrozenxid
        this.datminmxid = datminmxid
        this.dattablespace = dattablespace
        this.datacl = datacl
        resetChangedOnNotNull()
    }
}
