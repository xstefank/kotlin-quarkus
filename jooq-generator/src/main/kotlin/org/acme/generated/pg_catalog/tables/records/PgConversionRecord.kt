/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgConversion
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgConversionRecord() : UpdatableRecordImpl<PgConversionRecord>(PgConversion.PG_CONVERSION) {

    open var oid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var conname: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var connamespace: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var conowner: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var conforencoding: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var contoencoding: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var conproc: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var condefault: Boolean?
        set(value): Unit = set(7, value)
        get(): Boolean? = get(7) as Boolean?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised PgConversionRecord
     */
    constructor(oid: Long? = null, conname: String? = null, connamespace: Long? = null, conowner: Long? = null, conforencoding: Int? = null, contoencoding: Int? = null, conproc: String? = null, condefault: Boolean? = null): this() {
        this.oid = oid
        this.conname = conname
        this.connamespace = connamespace
        this.conowner = conowner
        this.conforencoding = conforencoding
        this.contoencoding = contoencoding
        this.conproc = conproc
        this.condefault = condefault
        resetChangedOnNotNull()
    }
}
