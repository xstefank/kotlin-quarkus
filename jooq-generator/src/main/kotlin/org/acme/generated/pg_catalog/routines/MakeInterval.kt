/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.routines


import org.acme.generated.pg_catalog.PgCatalog
import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType
import org.jooq.types.YearToSecond


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class MakeInterval : AbstractRoutine<YearToSecond>("make_interval", PgCatalog.PG_CATALOG, SQLDataType.INTERVAL) {
    companion object {

        /**
         * The parameter <code>pg_catalog.make_interval.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<YearToSecond?> = Internal.createParameter("RETURN_VALUE", SQLDataType.INTERVAL, false, false)

        /**
         * The parameter <code>pg_catalog.make_interval.years</code>.
         */
        val YEARS: Parameter<Int?> = Internal.createParameter("years", SQLDataType.INTEGER.defaultValue(DSL.field(DSL.raw("0"), SQLDataType.INTEGER)), true, false)

        /**
         * The parameter <code>pg_catalog.make_interval.months</code>.
         */
        val MONTHS: Parameter<Int?> = Internal.createParameter("months", SQLDataType.INTEGER.defaultValue(DSL.field(DSL.raw("0"), SQLDataType.INTEGER)), true, false)

        /**
         * The parameter <code>pg_catalog.make_interval.weeks</code>.
         */
        val WEEKS: Parameter<Int?> = Internal.createParameter("weeks", SQLDataType.INTEGER.defaultValue(DSL.field(DSL.raw("0"), SQLDataType.INTEGER)), true, false)

        /**
         * The parameter <code>pg_catalog.make_interval.days</code>.
         */
        val DAYS: Parameter<Int?> = Internal.createParameter("days", SQLDataType.INTEGER.defaultValue(DSL.field(DSL.raw("0"), SQLDataType.INTEGER)), true, false)

        /**
         * The parameter <code>pg_catalog.make_interval.hours</code>.
         */
        val HOURS: Parameter<Int?> = Internal.createParameter("hours", SQLDataType.INTEGER.defaultValue(DSL.field(DSL.raw("0"), SQLDataType.INTEGER)), true, false)

        /**
         * The parameter <code>pg_catalog.make_interval.mins</code>.
         */
        val MINS: Parameter<Int?> = Internal.createParameter("mins", SQLDataType.INTEGER.defaultValue(DSL.field(DSL.raw("0"), SQLDataType.INTEGER)), true, false)

        /**
         * The parameter <code>pg_catalog.make_interval.secs</code>.
         */
        val SECS: Parameter<Double?> = Internal.createParameter("secs", SQLDataType.DOUBLE.defaultValue(DSL.field(DSL.raw("0.0"), SQLDataType.DOUBLE)), true, false)
    }

    init {
        returnParameter = MakeInterval.RETURN_VALUE
        addInParameter(MakeInterval.YEARS)
        addInParameter(MakeInterval.MONTHS)
        addInParameter(MakeInterval.WEEKS)
        addInParameter(MakeInterval.DAYS)
        addInParameter(MakeInterval.HOURS)
        addInParameter(MakeInterval.MINS)
        addInParameter(MakeInterval.SECS)
    }

    /**
     * Set the <code>years</code> parameter IN value to the routine
     */
    fun setYears(value: Int?): Unit = setValue(MakeInterval.YEARS, value)

    /**
     * Set the <code>years</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setYears(field: Field<Int?>): Unit {
        setField(MakeInterval.YEARS, field)
    }

    /**
     * Set the <code>months</code> parameter IN value to the routine
     */
    fun setMonths(value: Int?): Unit = setValue(MakeInterval.MONTHS, value)

    /**
     * Set the <code>months</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setMonths(field: Field<Int?>): Unit {
        setField(MakeInterval.MONTHS, field)
    }

    /**
     * Set the <code>weeks</code> parameter IN value to the routine
     */
    fun setWeeks(value: Int?): Unit = setValue(MakeInterval.WEEKS, value)

    /**
     * Set the <code>weeks</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setWeeks(field: Field<Int?>): Unit {
        setField(MakeInterval.WEEKS, field)
    }

    /**
     * Set the <code>days</code> parameter IN value to the routine
     */
    fun setDays(value: Int?): Unit = setValue(MakeInterval.DAYS, value)

    /**
     * Set the <code>days</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setDays(field: Field<Int?>): Unit {
        setField(MakeInterval.DAYS, field)
    }

    /**
     * Set the <code>hours</code> parameter IN value to the routine
     */
    fun setHours(value: Int?): Unit = setValue(MakeInterval.HOURS, value)

    /**
     * Set the <code>hours</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setHours(field: Field<Int?>): Unit {
        setField(MakeInterval.HOURS, field)
    }

    /**
     * Set the <code>mins</code> parameter IN value to the routine
     */
    fun setMins(value: Int?): Unit = setValue(MakeInterval.MINS, value)

    /**
     * Set the <code>mins</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setMins(field: Field<Int?>): Unit {
        setField(MakeInterval.MINS, field)
    }

    /**
     * Set the <code>secs</code> parameter IN value to the routine
     */
    fun setSecs(value: Double?): Unit = setValue(MakeInterval.SECS, value)

    /**
     * Set the <code>secs</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setSecs(field: Field<Double?>): Unit {
        setField(MakeInterval.SECS, field)
    }
}
