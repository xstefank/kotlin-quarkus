/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgEventTriggerDdlCommands
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgEventTriggerDdlCommandsRecord() : TableRecordImpl<PgEventTriggerDdlCommandsRecord>(PgEventTriggerDdlCommands.PG_EVENT_TRIGGER_DDL_COMMANDS) {

    open var classid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var objid: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var objsubid: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var commandTag: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var objectType: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var schemaName: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var objectIdentity: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var inExtension: Boolean?
        set(value): Unit = set(7, value)
        get(): Boolean? = get(7) as Boolean?

    open var command: Any?
        set(value): Unit = set(8, value)
        get(): Any? = get(8) as Any?

    /**
     * Create a detached, initialised PgEventTriggerDdlCommandsRecord
     */
    constructor(classid: Long? = null, objid: Long? = null, objsubid: Int? = null, commandTag: String? = null, objectType: String? = null, schemaName: String? = null, objectIdentity: String? = null, inExtension: Boolean? = null, command: Any? = null): this() {
        this.classid = classid
        this.objid = objid
        this.objsubid = objsubid
        this.commandTag = commandTag
        this.objectType = objectType
        this.schemaName = schemaName
        this.objectIdentity = objectIdentity
        this.inExtension = inExtension
        this.command = command
        resetChangedOnNotNull()
    }
}
