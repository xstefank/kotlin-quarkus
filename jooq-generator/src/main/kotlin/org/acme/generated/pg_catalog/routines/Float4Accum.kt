/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.routines


import org.acme.generated.pg_catalog.PgCatalog
import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Float4Accum : AbstractRoutine<Array<Double?>>("float4_accum", PgCatalog.PG_CATALOG, SQLDataType.FLOAT.array()) {
    companion object {

        /**
         * The parameter <code>pg_catalog.float4_accum.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Array<Double?>?> = Internal.createParameter("RETURN_VALUE", SQLDataType.FLOAT.array(), false, false)

        /**
         * The parameter <code>pg_catalog.float4_accum._1</code>.
         */
        val _1: Parameter<Array<Double?>?> = Internal.createParameter("_1", SQLDataType.FLOAT.array(), false, true)

        /**
         * The parameter <code>pg_catalog.float4_accum._2</code>.
         */
        val _2: Parameter<Float?> = Internal.createParameter("_2", SQLDataType.REAL, false, true)
    }

    init {
        returnParameter = Float4Accum.RETURN_VALUE
        addInParameter(Float4Accum._1)
        addInParameter(Float4Accum._2)
    }

    /**
     * Set the <code>_1</code> parameter IN value to the routine
     */
    fun set__1(value: Array<Double?>?): Unit = setValue(Float4Accum._1, value)

    /**
     * Set the <code>_1</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__1(field: Field<Array<Double?>?>): Unit {
        setField(Float4Accum._1, field)
    }

    /**
     * Set the <code>_2</code> parameter IN value to the routine
     */
    fun set__2(value: Float?): Unit = setValue(Float4Accum._2, value)

    /**
     * Set the <code>_2</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__2(field: Field<Float?>): Unit {
        setField(Float4Accum._2, field)
    }
}
