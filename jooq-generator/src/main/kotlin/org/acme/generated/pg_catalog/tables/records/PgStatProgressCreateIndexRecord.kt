/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgStatProgressCreateIndex
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgStatProgressCreateIndexRecord() : TableRecordImpl<PgStatProgressCreateIndexRecord>(PgStatProgressCreateIndex.PG_STAT_PROGRESS_CREATE_INDEX) {

    open var pid: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var datid: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var datname: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var relid: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var indexRelid: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var command: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var phase: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var lockersTotal: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var lockersDone: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    open var currentLockerPid: Long?
        set(value): Unit = set(9, value)
        get(): Long? = get(9) as Long?

    open var blocksTotal: Long?
        set(value): Unit = set(10, value)
        get(): Long? = get(10) as Long?

    open var blocksDone: Long?
        set(value): Unit = set(11, value)
        get(): Long? = get(11) as Long?

    open var tuplesTotal: Long?
        set(value): Unit = set(12, value)
        get(): Long? = get(12) as Long?

    open var tuplesDone: Long?
        set(value): Unit = set(13, value)
        get(): Long? = get(13) as Long?

    open var partitionsTotal: Long?
        set(value): Unit = set(14, value)
        get(): Long? = get(14) as Long?

    open var partitionsDone: Long?
        set(value): Unit = set(15, value)
        get(): Long? = get(15) as Long?

    /**
     * Create a detached, initialised PgStatProgressCreateIndexRecord
     */
    constructor(pid: Int? = null, datid: Long? = null, datname: String? = null, relid: Long? = null, indexRelid: Long? = null, command: String? = null, phase: String? = null, lockersTotal: Long? = null, lockersDone: Long? = null, currentLockerPid: Long? = null, blocksTotal: Long? = null, blocksDone: Long? = null, tuplesTotal: Long? = null, tuplesDone: Long? = null, partitionsTotal: Long? = null, partitionsDone: Long? = null): this() {
        this.pid = pid
        this.datid = datid
        this.datname = datname
        this.relid = relid
        this.indexRelid = indexRelid
        this.command = command
        this.phase = phase
        this.lockersTotal = lockersTotal
        this.lockersDone = lockersDone
        this.currentLockerPid = currentLockerPid
        this.blocksTotal = blocksTotal
        this.blocksDone = blocksDone
        this.tuplesTotal = tuplesTotal
        this.tuplesDone = tuplesDone
        this.partitionsTotal = partitionsTotal
        this.partitionsDone = partitionsDone
        resetChangedOnNotNull()
    }
}
