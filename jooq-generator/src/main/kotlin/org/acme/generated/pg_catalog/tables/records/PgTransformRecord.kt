/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgTransform
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgTransformRecord() : UpdatableRecordImpl<PgTransformRecord>(PgTransform.PG_TRANSFORM) {

    open var oid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var trftype: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var trflang: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var trffromsql: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var trftosql: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised PgTransformRecord
     */
    constructor(oid: Long? = null, trftype: Long? = null, trflang: Long? = null, trffromsql: String? = null, trftosql: String? = null): this() {
        this.oid = oid
        this.trftype = trftype
        this.trflang = trflang
        this.trffromsql = trffromsql
        this.trftosql = trftosql
        resetChangedOnNotNull()
    }
}
