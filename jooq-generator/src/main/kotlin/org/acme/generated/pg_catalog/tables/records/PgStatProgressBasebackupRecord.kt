/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgStatProgressBasebackup
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgStatProgressBasebackupRecord() : TableRecordImpl<PgStatProgressBasebackupRecord>(PgStatProgressBasebackup.PG_STAT_PROGRESS_BASEBACKUP) {

    open var pid: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var phase: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var backupTotal: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var backupStreamed: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var tablespacesTotal: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var tablespacesStreamed: Long?
        set(value): Unit = set(5, value)
        get(): Long? = get(5) as Long?

    /**
     * Create a detached, initialised PgStatProgressBasebackupRecord
     */
    constructor(pid: Int? = null, phase: String? = null, backupTotal: Long? = null, backupStreamed: Long? = null, tablespacesTotal: Long? = null, tablespacesStreamed: Long? = null): this() {
        this.pid = pid
        this.phase = phase
        this.backupTotal = backupTotal
        this.backupStreamed = backupStreamed
        this.tablespacesTotal = tablespacesTotal
        this.tablespacesStreamed = tablespacesStreamed
        resetChangedOnNotNull()
    }
}
