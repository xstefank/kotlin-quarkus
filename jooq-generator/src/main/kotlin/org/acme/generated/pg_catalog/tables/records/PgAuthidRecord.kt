/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import java.time.OffsetDateTime

import org.acme.generated.pg_catalog.tables.PgAuthid
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgAuthidRecord() : UpdatableRecordImpl<PgAuthidRecord>(PgAuthid.PG_AUTHID) {

    open var oid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var rolname: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var rolsuper: Boolean?
        set(value): Unit = set(2, value)
        get(): Boolean? = get(2) as Boolean?

    open var rolinherit: Boolean?
        set(value): Unit = set(3, value)
        get(): Boolean? = get(3) as Boolean?

    open var rolcreaterole: Boolean?
        set(value): Unit = set(4, value)
        get(): Boolean? = get(4) as Boolean?

    open var rolcreatedb: Boolean?
        set(value): Unit = set(5, value)
        get(): Boolean? = get(5) as Boolean?

    open var rolcanlogin: Boolean?
        set(value): Unit = set(6, value)
        get(): Boolean? = get(6) as Boolean?

    open var rolreplication: Boolean?
        set(value): Unit = set(7, value)
        get(): Boolean? = get(7) as Boolean?

    open var rolbypassrls: Boolean?
        set(value): Unit = set(8, value)
        get(): Boolean? = get(8) as Boolean?

    open var rolconnlimit: Int?
        set(value): Unit = set(9, value)
        get(): Int? = get(9) as Int?

    open var rolpassword: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var rolvaliduntil: OffsetDateTime?
        set(value): Unit = set(11, value)
        get(): OffsetDateTime? = get(11) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised PgAuthidRecord
     */
    constructor(oid: Long? = null, rolname: String? = null, rolsuper: Boolean? = null, rolinherit: Boolean? = null, rolcreaterole: Boolean? = null, rolcreatedb: Boolean? = null, rolcanlogin: Boolean? = null, rolreplication: Boolean? = null, rolbypassrls: Boolean? = null, rolconnlimit: Int? = null, rolpassword: String? = null, rolvaliduntil: OffsetDateTime? = null): this() {
        this.oid = oid
        this.rolname = rolname
        this.rolsuper = rolsuper
        this.rolinherit = rolinherit
        this.rolcreaterole = rolcreaterole
        this.rolcreatedb = rolcreatedb
        this.rolcanlogin = rolcanlogin
        this.rolreplication = rolreplication
        this.rolbypassrls = rolbypassrls
        this.rolconnlimit = rolconnlimit
        this.rolpassword = rolpassword
        this.rolvaliduntil = rolvaliduntil
        resetChangedOnNotNull()
    }
}
