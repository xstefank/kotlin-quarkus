/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgNamespace
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgNamespaceRecord() : UpdatableRecordImpl<PgNamespaceRecord>(PgNamespace.PG_NAMESPACE) {

    open var oid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var nspname: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var nspowner: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var nspacl: Array<String?>?
        set(value): Unit = set(3, value)
        get(): Array<String?>? = get(3) as Array<String?>?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised PgNamespaceRecord
     */
    constructor(oid: Long? = null, nspname: String? = null, nspowner: Long? = null, nspacl: Array<String?>? = null): this() {
        this.oid = oid
        this.nspname = nspname
        this.nspowner = nspowner
        this.nspacl = nspacl
        resetChangedOnNotNull()
    }
}
