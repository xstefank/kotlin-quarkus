/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import java.time.OffsetDateTime

import org.acme.generated.pg_catalog.tables.PgLockStatus
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgLockStatusRecord() : TableRecordImpl<PgLockStatusRecord>(PgLockStatus.PG_LOCK_STATUS) {

    open var locktype: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var database: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var relation: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var page: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var tuple: Short?
        set(value): Unit = set(4, value)
        get(): Short? = get(4) as Short?

    open var virtualxid: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var transactionid: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    open var classid: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var objid: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    open var objsubid: Short?
        set(value): Unit = set(9, value)
        get(): Short? = get(9) as Short?

    open var virtualtransaction: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var pid: Int?
        set(value): Unit = set(11, value)
        get(): Int? = get(11) as Int?

    open var mode: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    open var granted: Boolean?
        set(value): Unit = set(13, value)
        get(): Boolean? = get(13) as Boolean?

    open var fastpath: Boolean?
        set(value): Unit = set(14, value)
        get(): Boolean? = get(14) as Boolean?

    open var waitstart: OffsetDateTime?
        set(value): Unit = set(15, value)
        get(): OffsetDateTime? = get(15) as OffsetDateTime?

    /**
     * Create a detached, initialised PgLockStatusRecord
     */
    constructor(locktype: String? = null, database: Long? = null, relation: Long? = null, page: Int? = null, tuple: Short? = null, virtualxid: String? = null, transactionid: Long? = null, classid: Long? = null, objid: Long? = null, objsubid: Short? = null, virtualtransaction: String? = null, pid: Int? = null, mode: String? = null, granted: Boolean? = null, fastpath: Boolean? = null, waitstart: OffsetDateTime? = null): this() {
        this.locktype = locktype
        this.database = database
        this.relation = relation
        this.page = page
        this.tuple = tuple
        this.virtualxid = virtualxid
        this.transactionid = transactionid
        this.classid = classid
        this.objid = objid
        this.objsubid = objsubid
        this.virtualtransaction = virtualtransaction
        this.pid = pid
        this.mode = mode
        this.granted = granted
        this.fastpath = fastpath
        this.waitstart = waitstart
        resetChangedOnNotNull()
    }
}
