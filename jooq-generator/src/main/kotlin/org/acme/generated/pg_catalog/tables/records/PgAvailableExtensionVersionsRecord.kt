/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgAvailableExtensionVersions
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgAvailableExtensionVersionsRecord() : TableRecordImpl<PgAvailableExtensionVersionsRecord>(PgAvailableExtensionVersions.PG_AVAILABLE_EXTENSION_VERSIONS) {

    open var name: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var version: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var installed: Boolean?
        set(value): Unit = set(2, value)
        get(): Boolean? = get(2) as Boolean?

    open var superuser: Boolean?
        set(value): Unit = set(3, value)
        get(): Boolean? = get(3) as Boolean?

    open var trusted: Boolean?
        set(value): Unit = set(4, value)
        get(): Boolean? = get(4) as Boolean?

    open var relocatable: Boolean?
        set(value): Unit = set(5, value)
        get(): Boolean? = get(5) as Boolean?

    open var schema: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var requires: Array<String?>?
        set(value): Unit = set(7, value)
        get(): Array<String?>? = get(7) as Array<String?>?

    open var comment: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    /**
     * Create a detached, initialised PgAvailableExtensionVersionsRecord
     */
    constructor(name: String? = null, version: String? = null, installed: Boolean? = null, superuser: Boolean? = null, trusted: Boolean? = null, relocatable: Boolean? = null, schema: String? = null, requires: Array<String?>? = null, comment: String? = null): this() {
        this.name = name
        this.version = version
        this.installed = installed
        this.superuser = superuser
        this.trusted = trusted
        this.relocatable = relocatable
        this.schema = schema
        this.requires = requires
        this.comment = comment
        resetChangedOnNotNull()
    }
}
