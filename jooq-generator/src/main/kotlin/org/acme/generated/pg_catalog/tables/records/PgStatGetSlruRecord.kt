/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import java.time.OffsetDateTime

import org.acme.generated.pg_catalog.tables.PgStatGetSlru
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgStatGetSlruRecord() : TableRecordImpl<PgStatGetSlruRecord>(PgStatGetSlru.PG_STAT_GET_SLRU) {

    open var name: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var blksZeroed: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var blksHit: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var blksRead: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var blksWritten: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var blksExists: Long?
        set(value): Unit = set(5, value)
        get(): Long? = get(5) as Long?

    open var flushes: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    open var truncates: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var statsReset: OffsetDateTime?
        set(value): Unit = set(8, value)
        get(): OffsetDateTime? = get(8) as OffsetDateTime?

    /**
     * Create a detached, initialised PgStatGetSlruRecord
     */
    constructor(name: String? = null, blksZeroed: Long? = null, blksHit: Long? = null, blksRead: Long? = null, blksWritten: Long? = null, blksExists: Long? = null, flushes: Long? = null, truncates: Long? = null, statsReset: OffsetDateTime? = null): this() {
        this.name = name
        this.blksZeroed = blksZeroed
        this.blksHit = blksHit
        this.blksRead = blksRead
        this.blksWritten = blksWritten
        this.blksExists = blksExists
        this.flushes = flushes
        this.truncates = truncates
        this.statsReset = statsReset
        resetChangedOnNotNull()
    }
}
