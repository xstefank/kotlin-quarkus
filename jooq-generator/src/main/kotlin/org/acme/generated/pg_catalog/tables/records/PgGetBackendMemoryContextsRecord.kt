/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgGetBackendMemoryContexts
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgGetBackendMemoryContextsRecord() : TableRecordImpl<PgGetBackendMemoryContextsRecord>(PgGetBackendMemoryContexts.PG_GET_BACKEND_MEMORY_CONTEXTS) {

    open var name: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var ident: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var parent: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var level: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var totalBytes: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var totalNblocks: Long?
        set(value): Unit = set(5, value)
        get(): Long? = get(5) as Long?

    open var freeBytes: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    open var freeChunks: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var usedBytes: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    /**
     * Create a detached, initialised PgGetBackendMemoryContextsRecord
     */
    constructor(name: String? = null, ident: String? = null, parent: String? = null, level: Int? = null, totalBytes: Long? = null, totalNblocks: Long? = null, freeBytes: Long? = null, freeChunks: Long? = null, usedBytes: Long? = null): this() {
        this.name = name
        this.ident = ident
        this.parent = parent
        this.level = level
        this.totalBytes = totalBytes
        this.totalNblocks = totalNblocks
        this.freeBytes = freeBytes
        this.freeChunks = freeChunks
        this.usedBytes = usedBytes
        resetChangedOnNotNull()
    }
}
