/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgUserMappings
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgUserMappingsRecord() : TableRecordImpl<PgUserMappingsRecord>(PgUserMappings.PG_USER_MAPPINGS) {

    open var umid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var srvid: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var srvname: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var umuser: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var usename: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var umoptions: Array<String?>?
        set(value): Unit = set(5, value)
        get(): Array<String?>? = get(5) as Array<String?>?

    /**
     * Create a detached, initialised PgUserMappingsRecord
     */
    constructor(umid: Long? = null, srvid: Long? = null, srvname: String? = null, umuser: Long? = null, usename: String? = null, umoptions: Array<String?>? = null): this() {
        this.umid = umid
        this.srvid = srvid
        this.srvname = srvname
        this.umuser = umuser
        this.usename = usename
        this.umoptions = umoptions
        resetChangedOnNotNull()
    }
}
