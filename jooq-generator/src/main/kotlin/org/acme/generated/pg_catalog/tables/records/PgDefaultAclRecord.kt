/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgDefaultAcl
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgDefaultAclRecord() : UpdatableRecordImpl<PgDefaultAclRecord>(PgDefaultAcl.PG_DEFAULT_ACL) {

    open var oid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var defaclrole: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var defaclnamespace: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var defaclobjtype: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var defaclacl: Array<String?>?
        set(value): Unit = set(4, value)
        get(): Array<String?>? = get(4) as Array<String?>?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised PgDefaultAclRecord
     */
    constructor(oid: Long? = null, defaclrole: Long? = null, defaclnamespace: Long? = null, defaclobjtype: String? = null, defaclacl: Array<String?>? = null): this() {
        this.oid = oid
        this.defaclrole = defaclrole
        this.defaclnamespace = defaclnamespace
        this.defaclobjtype = defaclobjtype
        this.defaclacl = defaclacl
        resetChangedOnNotNull()
    }
}
