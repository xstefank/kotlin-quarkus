/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.routines


import org.acme.generated.pg_catalog.PgCatalog
import org.jooq.Field
import org.jooq.Parameter
import org.jooq.XML
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class QueryToXml : AbstractRoutine<XML>("query_to_xml", PgCatalog.PG_CATALOG, SQLDataType.XML) {
    companion object {

        /**
         * The parameter <code>pg_catalog.query_to_xml.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<XML?> = Internal.createParameter("RETURN_VALUE", SQLDataType.XML, false, false)

        /**
         * The parameter <code>pg_catalog.query_to_xml.query</code>.
         */
        val QUERY: Parameter<String?> = Internal.createParameter("query", SQLDataType.CLOB, false, false)

        /**
         * The parameter <code>pg_catalog.query_to_xml.nulls</code>.
         */
        val NULLS: Parameter<Boolean?> = Internal.createParameter("nulls", SQLDataType.BOOLEAN, false, false)

        /**
         * The parameter <code>pg_catalog.query_to_xml.tableforest</code>.
         */
        val TABLEFOREST: Parameter<Boolean?> = Internal.createParameter("tableforest", SQLDataType.BOOLEAN, false, false)

        /**
         * The parameter <code>pg_catalog.query_to_xml.targetns</code>.
         */
        val TARGETNS: Parameter<String?> = Internal.createParameter("targetns", SQLDataType.CLOB, false, false)
    }

    init {
        returnParameter = QueryToXml.RETURN_VALUE
        addInParameter(QueryToXml.QUERY)
        addInParameter(QueryToXml.NULLS)
        addInParameter(QueryToXml.TABLEFOREST)
        addInParameter(QueryToXml.TARGETNS)
    }

    /**
     * Set the <code>query</code> parameter IN value to the routine
     */
    fun setQuery(value: String?): Unit = setValue(QueryToXml.QUERY, value)

    /**
     * Set the <code>query</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setQuery(field: Field<String?>): Unit {
        setField(QueryToXml.QUERY, field)
    }

    /**
     * Set the <code>nulls</code> parameter IN value to the routine
     */
    fun setNulls(value: Boolean?): Unit = setValue(QueryToXml.NULLS, value)

    /**
     * Set the <code>nulls</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setNulls(field: Field<Boolean?>): Unit {
        setField(QueryToXml.NULLS, field)
    }

    /**
     * Set the <code>tableforest</code> parameter IN value to the routine
     */
    fun setTableforest(value: Boolean?): Unit = setValue(QueryToXml.TABLEFOREST, value)

    /**
     * Set the <code>tableforest</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setTableforest(field: Field<Boolean?>): Unit {
        setField(QueryToXml.TABLEFOREST, field)
    }

    /**
     * Set the <code>targetns</code> parameter IN value to the routine
     */
    fun setTargetns(value: String?): Unit = setValue(QueryToXml.TARGETNS, value)

    /**
     * Set the <code>targetns</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setTargetns(field: Field<String?>): Unit {
        setField(QueryToXml.TARGETNS, field)
    }
}
