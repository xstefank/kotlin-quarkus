/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgEnum
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgEnumRecord() : UpdatableRecordImpl<PgEnumRecord>(PgEnum.PG_ENUM) {

    open var oid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var enumtypid: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var enumsortorder: Float?
        set(value): Unit = set(2, value)
        get(): Float? = get(2) as Float?

    open var enumlabel: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised PgEnumRecord
     */
    constructor(oid: Long? = null, enumtypid: Long? = null, enumsortorder: Float? = null, enumlabel: String? = null): this() {
        this.oid = oid
        this.enumtypid = enumtypid
        this.enumsortorder = enumsortorder
        this.enumlabel = enumlabel
        resetChangedOnNotNull()
    }
}
