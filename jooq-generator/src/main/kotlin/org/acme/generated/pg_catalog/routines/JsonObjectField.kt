/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.routines


import org.acme.generated.pg_catalog.PgCatalog
import org.jooq.Field
import org.jooq.JSON
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JsonObjectField : AbstractRoutine<JSON>("json_object_field", PgCatalog.PG_CATALOG, SQLDataType.JSON) {
    companion object {

        /**
         * The parameter <code>pg_catalog.json_object_field.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<JSON?> = Internal.createParameter("RETURN_VALUE", SQLDataType.JSON, false, false)

        /**
         * The parameter <code>pg_catalog.json_object_field.from_json</code>.
         */
        val FROM_JSON: Parameter<JSON?> = Internal.createParameter("from_json", SQLDataType.JSON, false, false)

        /**
         * The parameter <code>pg_catalog.json_object_field.field_name</code>.
         */
        val FIELD_NAME: Parameter<String?> = Internal.createParameter("field_name", SQLDataType.CLOB, false, false)
    }

    init {
        returnParameter = JsonObjectField.RETURN_VALUE
        addInParameter(JsonObjectField.FROM_JSON)
        addInParameter(JsonObjectField.FIELD_NAME)
    }

    /**
     * Set the <code>from_json</code> parameter IN value to the routine
     */
    fun setFromJson(value: JSON?): Unit = setValue(JsonObjectField.FROM_JSON, value)

    /**
     * Set the <code>from_json</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    fun setFromJson(field: Field<JSON?>): Unit {
        setField(JsonObjectField.FROM_JSON, field)
    }

    /**
     * Set the <code>field_name</code> parameter IN value to the routine
     */
    fun setFieldName(value: String?): Unit = setValue(JsonObjectField.FIELD_NAME, value)

    /**
     * Set the <code>field_name</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    fun setFieldName(field: Field<String?>): Unit {
        setField(JsonObjectField.FIELD_NAME, field)
    }
}
