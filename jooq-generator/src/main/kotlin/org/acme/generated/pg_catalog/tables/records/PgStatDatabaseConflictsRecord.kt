/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgStatDatabaseConflicts
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgStatDatabaseConflictsRecord() : TableRecordImpl<PgStatDatabaseConflictsRecord>(PgStatDatabaseConflicts.PG_STAT_DATABASE_CONFLICTS) {

    open var datid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var datname: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var conflTablespace: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var conflLock: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var conflSnapshot: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var conflBufferpin: Long?
        set(value): Unit = set(5, value)
        get(): Long? = get(5) as Long?

    open var conflDeadlock: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    /**
     * Create a detached, initialised PgStatDatabaseConflictsRecord
     */
    constructor(datid: Long? = null, datname: String? = null, conflTablespace: Long? = null, conflLock: Long? = null, conflSnapshot: Long? = null, conflBufferpin: Long? = null, conflDeadlock: Long? = null): this() {
        this.datid = datid
        this.datname = datname
        this.conflTablespace = conflTablespace
        this.conflLock = conflLock
        this.conflSnapshot = conflSnapshot
        this.conflBufferpin = conflBufferpin
        this.conflDeadlock = conflDeadlock
        resetChangedOnNotNull()
    }
}
