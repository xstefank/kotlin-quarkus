/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgSettings
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgSettingsRecord() : TableRecordImpl<PgSettingsRecord>(PgSettings.PG_SETTINGS) {

    open var name: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var setting: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var unit: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var category: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var shortDesc: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var extraDesc: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var context: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var vartype: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var source: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var minVal: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var maxVal: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var enumvals: Array<String?>?
        set(value): Unit = set(11, value)
        get(): Array<String?>? = get(11) as Array<String?>?

    open var bootVal: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    open var resetVal: String?
        set(value): Unit = set(13, value)
        get(): String? = get(13) as String?

    open var sourcefile: String?
        set(value): Unit = set(14, value)
        get(): String? = get(14) as String?

    open var sourceline: Int?
        set(value): Unit = set(15, value)
        get(): Int? = get(15) as Int?

    open var pendingRestart: Boolean?
        set(value): Unit = set(16, value)
        get(): Boolean? = get(16) as Boolean?

    /**
     * Create a detached, initialised PgSettingsRecord
     */
    constructor(name: String? = null, setting: String? = null, unit: String? = null, category: String? = null, shortDesc: String? = null, extraDesc: String? = null, context: String? = null, vartype: String? = null, source: String? = null, minVal: String? = null, maxVal: String? = null, enumvals: Array<String?>? = null, bootVal: String? = null, resetVal: String? = null, sourcefile: String? = null, sourceline: Int? = null, pendingRestart: Boolean? = null): this() {
        this.name = name
        this.setting = setting
        this.unit = unit
        this.category = category
        this.shortDesc = shortDesc
        this.extraDesc = extraDesc
        this.context = context
        this.vartype = vartype
        this.source = source
        this.minVal = minVal
        this.maxVal = maxVal
        this.enumvals = enumvals
        this.bootVal = bootVal
        this.resetVal = resetVal
        this.sourcefile = sourcefile
        this.sourceline = sourceline
        this.pendingRestart = pendingRestart
        resetChangedOnNotNull()
    }
}
