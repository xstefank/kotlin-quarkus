/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgStatProgressCluster
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgStatProgressClusterRecord() : TableRecordImpl<PgStatProgressClusterRecord>(PgStatProgressCluster.PG_STAT_PROGRESS_CLUSTER) {

    open var pid: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var datid: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var datname: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var relid: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var command: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var phase: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var clusterIndexRelid: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    open var heapTuplesScanned: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var heapTuplesWritten: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    open var heapBlksTotal: Long?
        set(value): Unit = set(9, value)
        get(): Long? = get(9) as Long?

    open var heapBlksScanned: Long?
        set(value): Unit = set(10, value)
        get(): Long? = get(10) as Long?

    open var indexRebuildCount: Long?
        set(value): Unit = set(11, value)
        get(): Long? = get(11) as Long?

    /**
     * Create a detached, initialised PgStatProgressClusterRecord
     */
    constructor(pid: Int? = null, datid: Long? = null, datname: String? = null, relid: Long? = null, command: String? = null, phase: String? = null, clusterIndexRelid: Long? = null, heapTuplesScanned: Long? = null, heapTuplesWritten: Long? = null, heapBlksTotal: Long? = null, heapBlksScanned: Long? = null, indexRebuildCount: Long? = null): this() {
        this.pid = pid
        this.datid = datid
        this.datname = datname
        this.relid = relid
        this.command = command
        this.phase = phase
        this.clusterIndexRelid = clusterIndexRelid
        this.heapTuplesScanned = heapTuplesScanned
        this.heapTuplesWritten = heapTuplesWritten
        this.heapBlksTotal = heapBlksTotal
        this.heapBlksScanned = heapBlksScanned
        this.indexRebuildCount = indexRebuildCount
        resetChangedOnNotNull()
    }
}
