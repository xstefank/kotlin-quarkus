/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgSubscription
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgSubscriptionRecord() : UpdatableRecordImpl<PgSubscriptionRecord>(PgSubscription.PG_SUBSCRIPTION) {

    open var oid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var subdbid: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var subname: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var subowner: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var subenabled: Boolean?
        set(value): Unit = set(4, value)
        get(): Boolean? = get(4) as Boolean?

    open var subbinary: Boolean?
        set(value): Unit = set(5, value)
        get(): Boolean? = get(5) as Boolean?

    open var substream: Boolean?
        set(value): Unit = set(6, value)
        get(): Boolean? = get(6) as Boolean?

    open var subconninfo: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var subslotname: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var subsynccommit: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var subpublications: Array<String?>?
        set(value): Unit = set(10, value)
        get(): Array<String?>? = get(10) as Array<String?>?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised PgSubscriptionRecord
     */
    constructor(oid: Long? = null, subdbid: Long? = null, subname: String? = null, subowner: Long? = null, subenabled: Boolean? = null, subbinary: Boolean? = null, substream: Boolean? = null, subconninfo: String? = null, subslotname: String? = null, subsynccommit: String? = null, subpublications: Array<String?>? = null): this() {
        this.oid = oid
        this.subdbid = subdbid
        this.subname = subname
        this.subowner = subowner
        this.subenabled = subenabled
        this.subbinary = subbinary
        this.substream = substream
        this.subconninfo = subconninfo
        this.subslotname = subslotname
        this.subsynccommit = subsynccommit
        this.subpublications = subpublications
        resetChangedOnNotNull()
    }
}
