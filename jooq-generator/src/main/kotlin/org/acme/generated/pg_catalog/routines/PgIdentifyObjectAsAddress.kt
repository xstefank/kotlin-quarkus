/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.routines


import org.acme.generated.pg_catalog.PgCatalog
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgIdentifyObjectAsAddress : AbstractRoutine<java.lang.Void>("pg_identify_object_as_address", PgCatalog.PG_CATALOG) {
    companion object {

        /**
         * The parameter
         * <code>pg_catalog.pg_identify_object_as_address.classid</code>.
         */
        val CLASSID: Parameter<Long?> = Internal.createParameter("classid", SQLDataType.BIGINT, false, false)

        /**
         * The parameter
         * <code>pg_catalog.pg_identify_object_as_address.objid</code>.
         */
        val OBJID: Parameter<Long?> = Internal.createParameter("objid", SQLDataType.BIGINT, false, false)

        /**
         * The parameter
         * <code>pg_catalog.pg_identify_object_as_address.objsubid</code>.
         */
        val OBJSUBID: Parameter<Int?> = Internal.createParameter("objsubid", SQLDataType.INTEGER, false, false)

        /**
         * The parameter
         * <code>pg_catalog.pg_identify_object_as_address.type</code>.
         */
        val TYPE: Parameter<String?> = Internal.createParameter("type", SQLDataType.CLOB, false, false)

        /**
         * The parameter
         * <code>pg_catalog.pg_identify_object_as_address.object_names</code>.
         */
        val OBJECT_NAMES: Parameter<Array<String?>?> = Internal.createParameter("object_names", SQLDataType.CLOB.array(), false, false)

        /**
         * The parameter
         * <code>pg_catalog.pg_identify_object_as_address.object_args</code>.
         */
        val OBJECT_ARGS: Parameter<Array<String?>?> = Internal.createParameter("object_args", SQLDataType.CLOB.array(), false, false)
    }

    init {
        addInParameter(PgIdentifyObjectAsAddress.CLASSID)
        addInParameter(PgIdentifyObjectAsAddress.OBJID)
        addInParameter(PgIdentifyObjectAsAddress.OBJSUBID)
        addOutParameter(PgIdentifyObjectAsAddress.TYPE)
        addOutParameter(PgIdentifyObjectAsAddress.OBJECT_NAMES)
        addOutParameter(PgIdentifyObjectAsAddress.OBJECT_ARGS)
    }

    /**
     * Set the <code>classid</code> parameter IN value to the routine
     */
    fun setClassid(value: Long?): Unit = setValue(PgIdentifyObjectAsAddress.CLASSID, value)

    /**
     * Set the <code>objid</code> parameter IN value to the routine
     */
    fun setObjid(value: Long?): Unit = setValue(PgIdentifyObjectAsAddress.OBJID, value)

    /**
     * Set the <code>objsubid</code> parameter IN value to the routine
     */
    fun setObjsubid(value: Int?): Unit = setValue(PgIdentifyObjectAsAddress.OBJSUBID, value)

    /**
     * Get the <code>type</code> parameter OUT value from the routine
     */
    fun getType(): String? = get(PgIdentifyObjectAsAddress.TYPE)

    /**
     * Get the <code>object_names</code> parameter OUT value from the routine
     */
    fun getObjectNames(): Array<String?>? = get(PgIdentifyObjectAsAddress.OBJECT_NAMES)

    /**
     * Get the <code>object_args</code> parameter OUT value from the routine
     */
    fun getObjectArgs(): Array<String?>? = get(PgIdentifyObjectAsAddress.OBJECT_ARGS)
}
