/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.pg_catalog.tables.records


import org.acme.generated.pg_catalog.tables.PgEventTriggerDroppedObjects
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PgEventTriggerDroppedObjectsRecord() : TableRecordImpl<PgEventTriggerDroppedObjectsRecord>(PgEventTriggerDroppedObjects.PG_EVENT_TRIGGER_DROPPED_OBJECTS) {

    open var classid: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var objid: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var objsubid: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var original: Boolean?
        set(value): Unit = set(3, value)
        get(): Boolean? = get(3) as Boolean?

    open var normal: Boolean?
        set(value): Unit = set(4, value)
        get(): Boolean? = get(4) as Boolean?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsTemporary")
    open var isTemporary: Boolean?
        set(value): Unit = set(5, value)
        get(): Boolean? = get(5) as Boolean?

    open var objectType: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var schemaName: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var objectName: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var objectIdentity: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var addressNames: Array<String?>?
        set(value): Unit = set(10, value)
        get(): Array<String?>? = get(10) as Array<String?>?

    open var addressArgs: Array<String?>?
        set(value): Unit = set(11, value)
        get(): Array<String?>? = get(11) as Array<String?>?

    /**
     * Create a detached, initialised PgEventTriggerDroppedObjectsRecord
     */
    constructor(classid: Long? = null, objid: Long? = null, objsubid: Int? = null, original: Boolean? = null, normal: Boolean? = null, isTemporary: Boolean? = null, objectType: String? = null, schemaName: String? = null, objectName: String? = null, objectIdentity: String? = null, addressNames: Array<String?>? = null, addressArgs: Array<String?>? = null): this() {
        this.classid = classid
        this.objid = objid
        this.objsubid = objsubid
        this.original = original
        this.normal = normal
        this.isTemporary = isTemporary
        this.objectType = objectType
        this.schemaName = schemaName
        this.objectName = objectName
        this.objectIdentity = objectIdentity
        this.addressNames = addressNames
        this.addressArgs = addressArgs
        resetChangedOnNotNull()
    }
}
